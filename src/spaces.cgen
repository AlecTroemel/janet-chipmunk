($
 (use /codes)
 (set-lib-name "spaces"))

($
 # Constructors/Deconstructors
 (defj cpSpaceNew
   "Allocates and initializes a cpSpace struct."
   [] (cpSpace space))

 (defj cpSpaceFree
   "destroy the cpSpace."
   [(cpSpace space)])

 # Gravity
 (defj cpSpaceGetGravity
   "get Gravity of the space."
   [(cpSpace space)] (cpVect gravity))
 (defj cpSpaceSetGravity
   "Set gravity of the space."
   [(cpSpace space) (cpVect gravity)])

 (defj cpSpaceGetStaticBody
   "A dedicated static body for the space. You donâ€™t have to use it, but because its memory is managed automatically with the space its very convenient."
   [(cpSpace space)] (cpBody body))

 # Iterations and steps
 (defj cpSpaceSetIterations
   "Iterations allow you to control the accuracy of the solver. Defaults to 10."
   [(cpSpace space) (float iterations)])

 (defj cpSpaceStep
   "Update the space for the given time step. Using a fixed time step is highly recommended."
   [(cpSpace space) (float dt)])

 (defj cpSpaceSetSleepTimeThreshold
   "Time a group of bodies must remain idle in order to fall asleep. The default value of INFINITY disables the sleeping feature."
   [(cpSpace space) (float value)])

 # Adders
 (defj cpSpaceAddShape
   "Add shape to space."
   [(cpSpace space) (cpShape shape)] (cpShape rshape))

 (defj cpSpaceAddBody
   "Add body to space."
   [(cpSpace space) (cpBody body)] (cpBody rbody))

 (defj cpSpaceAddConstraint
   "Add constraint to space."
   [(cpSpace space) (cpConstraint constraint)] (cpConstraint rconstraint))

 (cfuns-entry))
